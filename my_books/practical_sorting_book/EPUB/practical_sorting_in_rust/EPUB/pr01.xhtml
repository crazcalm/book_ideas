<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="en"
	lang="en">
	<head>
		<title>Preface</title>
		<link rel="stylesheet" type="text/css" href="css/epub.css" />
	</head>
	<body>
		<section class="preface" epub:type="preface" role="doc-preface" aria-labelledby="preface_h" id="_preface">
		  <h2 id="preface_h" class="title">Preface</h2>

		  <p>This book is about sorting. I acknowledge that "sorting" means many things to many people. As a Software Engineer, I would define sorting as the acto of placing a collection of items in order.</p>

		  <p>For example, if I take the list of <code>[4, 3, 5, 2, 1]</code>, the sorted order will be <code>[1, 2, 3, 4, 5]</code>.</p>

		  <p>If you agree with this definition, I agree with you. If you disagree with this definition, I also agree with you.</p>

		  <p>My issue with this definition is that it is both correct and misleading. It implies that "sorting" can only result in one definitive order, but what is "order"?</p>

		  <p>The American Heritage dictionary defines order as <q>a condition of logical or comprehensible arrangement among the separate elements of a group</q>. This means that as long as the final arrangment of elements is logical or comprehensible, they are ordered.</p>

		  <!--Need to continue -->

		  <p>With that in mind, lists like <code>[1, 2, 3, 4, 5]</code> and <code>[5, 4, 3, 2, 1]</code> are sorted because both ascending and descending order of numbers are logical arrangments. The same thing can be said for the list <code>[1, 3, 5, 2, 4]</code>. It's sorted because the numbers are placed in ascending order where the odd numbers are placed in front of the even numbers, which is a logical arrangement.</p>

		  <p>When it comes to the word "order", the important part is the logical arrangement. For example, the list <code>[3, 1, 2, 4, 5]</code> could be unordered, or it could be sorted in ascending order where 3's are given priority and placed at the front of the list.</p>

		  <p>Throughout this book we will be examining sorting with respect to ordering. We will examine the basics of sorting in Rust, we will learn how to manipulate our sort to achieve a particular order, we will learn how to implement sorting for custom structs, and we will learn how to exend our sorting capabilities at runtime to allow for dynamic sorting.</p>
		</section>
	</body>
</html>
